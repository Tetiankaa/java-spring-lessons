Simple Mail Transfer Protocol (SMTP) is a communication protocol used for sending and receiving email messages over the Internet.

spring.mail.host=smtp.gmail.com: Specifies the SMTP server host.
spring.mail.port=587: Specifies the port number used to establish a connection with the SMTP server.
spring.mail.username=your-sender-email@gmail.com: Email address you want to use as the sender of the emails.

spring.mail.password=copied-app-password: Password associated with the email account specified in the spring.mail.username property.
For security reasons, it's better to generate an app-specific password from the email service provider and use it here.
(app password gmail -> Google Account -> Security -> 2-Step Verification -> App passwords -> App name and press Create button)

mail.smtp.auth: Used to enable SMTP authentication. When set to true, it indicates that the SMTP server requires authentication before sending emails.

mail.smtp.starttls.enable: Enables the use of Transport Layer Security (TLS) when connecting to the SMTP server.
When set to true, it ensures that the connection is secured using TLS encryption.

MailSender interface - is used for sending emails.

@Value annotation is used to inject values from Spring's environment or property files.

SimpleMailMessage object represents the email message.

ObjectMapper is a class provided by Jackson library that is used for JSON serialization and deserialization.
    · Serialization is the process of converting the state of an object to a byte stream.
    · Deserialization is the process of converting a byte stream to actual Java Object.

@SneakyThrows - automatically catches and rethrows checked exceptions.

MultipartFile represents the uploaded file.

TypeReference<T> helps Jackson correctly deserialize JSON into objects of the specified type.